version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: ansacademy_db
    environment:
      POSTGRES_DB: ansacademy
      POSTGRES_USER: ansacademy
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ansacademy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Ollama AI Service
  ollama:
    image: ollama/ollama:latest
    container_name: ansacademy_ai
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/version"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Caching
  redis:
    image: redis:7-alpine
    container_name: ansacademy_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: ansacademy_app
    ports:
      - "3000:3000"
      - "3001:3001"
    environment:
      - DATABASE_URL=postgresql://ansacademy:password123@postgres:5432/ansacademy
      - OLLAMA_URL=http://ollama:11434
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_SECRET=your-secret-key
      - JWT_SECRET=your-jwt-secret
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev:full

volumes:
  postgres_data:
  ollama_data:
  redis_data: